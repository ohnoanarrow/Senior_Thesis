proxies = [
            '139.59.72.235',
            '159.89.162.98',
            '159.65.148.201',
            '62.244.38.62',
            '207.188.231.141',
            '45.32.21.84',
            '94.253.15.25',
            '202.174.46.113',
            '103.73.224.53',
            '190.82.94.13',
            '176.120.220.125',
            '181.113.225.198'
]

proxy_pool = cycle(proxies)

for child in attrs.children:
                if counter == 0:
                    rarity = child[3:10]
                    print(rarity)
                    counter += 1
                elif counter == 1:
                    number = child
                    print(number)
                    counter += 1
                else:
                    cardname = child.string
                    print(cardname)

print("Cats")
# Making sure there is a value under the strong tag
if tag.strong is not None:
    color = tag.find('div', attrs={'class':"small"})

    for link in soup.find_all('a', attrs={'href':re.compile("decklist")}):

        if counter > 0 and counter <= 4:
            cards_page = 'https://mtgdecks.net' + link.get('href')
            page = requests.get(cards_page)
            soupy = BeautifulSoup(page.text, 'html.parser')

            for x in color.contents:
                color = x.get('class')
                if color[0] != 'small-icon':
                    # Saves the color in a placeholder so I can manipulate the string contents
                    placeholder_string = color[2]
                    # Concatenating the single letter indicating color onto the color string
                    color_string += placeholder_string[3]
            # Sorting the letters in alphabetical order for dictionary reference
            color_string_sorter = sorted(color_string)
            color_string = ''.join(color_string_sorter)
            deck_color = color_dictionary.get(color_string)

            print(rank_counter)
            print(cards_page)

            # CardParser(tourn_num, rank_counter, deck_color, soupy)

            rank_counter += 1
        counter += 1
